<?xml version="1.0" encoding="utf-8" ?>

<!--
Copyright (C) 2020 Sky

THIS SOFTWARE CONTRIBUTION IS PROVIDED ON BEHALF OF SKY PLC.
BY THE CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<dataModelInfo>
    <version>1</version>
    <moduleName>TR181_RdkPppManager</moduleName>
    <author></author>
    <description></description>
    <library></library>
    <objects>
      <object>
        <name>PPP</name>
        <objectType>object</objectType>
        <functions>
          <func_GetParamBoolValue>PPP_GetParamBoolValue</func_GetParamBoolValue>
          <func_GetParamIntValue>PPP_GetParamIntValue</func_GetParamIntValue>
          <func_GetParamUlongValue>PPP_GetParamUlongValue</func_GetParamUlongValue>
          <func_GetParamStringValue>PPP_GetParamStringValue</func_GetParamStringValue>
        </functions>
        <parameters>
          <parameter>
            <name>SupportedNCPs</name>
            <type>string</type>
            <syntax>string</syntax>
          </parameter>
          <parameter>
            <name>InterfaceNumberOfEntries</name>
            <type>unsignedInt</type>
            <syntax>uint32</syntax>
          </parameter>
        </parameters>
        <objects>
          <object>
            <name>Interface</name>
            <objectType>writableTable</objectType>
            <maxInstance>128</maxInstance>
            <functions>
              <func_GetEntryCount>Interface_GetEntryCount</func_GetEntryCount>
              <func_GetEntry>Interface_GetEntry</func_GetEntry>
              <func_AddEntry>Interface_AddEntry</func_AddEntry>
              <func_DelEntry>Interface_DelEntry</func_DelEntry>
              <func_GetParamBoolValue>Interface_GetParamBoolValue</func_GetParamBoolValue>
              <func_GetParamUlongValue>Interface_GetParamUlongValue</func_GetParamUlongValue>
              <func_GetParamStringValue>Interface_GetParamStringValue</func_GetParamStringValue>
              <func_SetParamBoolValue>Interface_SetParamBoolValue</func_SetParamBoolValue>
              <func_SetParamIntValue>Interface_SetParamIntValue</func_SetParamIntValue>
              <func_SetParamUlongValue>Interface_SetParamUlongValue</func_SetParamUlongValue>
              <func_SetParamStringValue>Interface_SetParamStringValue</func_SetParamStringValue>
              <func_Validate>Interface_Validate</func_Validate>
              <func_Commit>Interface_Commit</func_Commit>
              <func_Rollback>Interface_Rollback</func_Rollback>
            </functions>
            <parameters>
            <parameter>
                <name>Enable</name>
                <type>boolean</type>
                <syntax>bool</syntax>
                <writable>true</writable>
            </parameter>
            <parameter>
              <name>IPCPEnable</name>
              <type>boolean</type>
              <syntax>bool</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>IPv6CPEnable</name>
              <type>boolean</type>
              <syntax>bool</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>Status</name>
              <type>string: Up(1),Down(2),Unknown(3),Dormant(4),NotPresent(5),LowerLayerDown(6),Error(7)</type>
              <syntax>uint32/mapped</syntax>
            </parameter>
            <parameter>
              <name>Alias</name>
              <type>string(64)</type>
              <syntax>string</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>Name</name>
              <type>string(64)</type>
              <syntax>string</syntax>
            </parameter>
            <parameter>
              <name>LastChange</name>
              <type>unsignedInt</type>
              <syntax>uint32</syntax>
              <notify>off</notify>
            </parameter>
            <parameter>
              <name>LowerLayers</name>
              <type>string</type>
              <syntax>string</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>Reset</name>
              <type>boolean</type>
              <syntax>bool</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>ConnectionStatus</name>
              <type>string: Unconfigured(1),Connecting(2),Authenticating(3),Connected(4),PendingDisconnect(5),Disconnecting(6),Disconnected(7)</type>
              <syntax>uint32/mapped</syntax>
            </parameter>
            <parameter>
              <name>LastConnectionError</name>
              <type>string: ERROR_NONE(1),ERROR_ISP_TIME_OUT(2),ERROR_COMMAND_ABORTED(3),ERROR_NOT_ENABLED_FOR_INTERNET(4),ERROR_BAD_PHONE_NUMBER(5),ERROR_USER_DISCONNECT(6),ERROR_ISP_DISCONNECT(7),ERROR_IDLE_DISCONNECT(8),ERROR_FORCED_DISCONNECT(9),ERROR_SERVER_OUT_OF_RESOURCES(10),ERROR_RESTRICTED_LOGON_HOURS(11),ERROR_ACCOUNT_DISABLED(12),ERROR_ACCOUNT_EXPIRED(13),ERROR_PASSWORD_EXPIRED(14),ERROR_AUTHENTICATION_FAILURE(15),ERROR_NO_DIALTONE(16),ERROR_NO_CARRIER(17),ERROR_NO_ANSWER(18),ERROR_LINE_BUSY(19),ERROR_UNSUPPORTED_BITSPERSECOND(20),ERROR_TOO_MANY_LINE_ERRORS(21),ERROR_IP_CONFIGURATION(22),ERROR_UNKNOWN(23)</type>
              <syntax>uint32/mapped</syntax>
            </parameter>
            <parameter>
              <name>AutoDisconnectTime</name>
              <type>unsignedInt</type>
              <syntax>uint32</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>IdleDisconnectTime</name>
              <type>unsignedInt</type>
              <syntax>uint32</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>WarnDisconnectDelay</name>
              <type>unsignedInt</type>
              <syntax>uint32</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>Username</name>
              <type>string(64)</type>
              <syntax>string</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>Password</name>
              <type>string(64)</type>
              <syntax>string</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>EncryptionProtocol</name>
              <type>string: None(1),MPPE(2)</type>
              <syntax>uint32/mapped</syntax>
            </parameter>
            <parameter>
              <name>CompressionProtocol</name>
              <type>string: None(1),Van Jacobson(2),STAC LZS(3)</type>
              <syntax>uint32/mapped</syntax>
            </parameter>
            <parameter>
              <name>AuthenticationProtocol</name>
              <type>string: PAP(1),CHAP(2),MS-CHAP(3)</type>
              <syntax>uint32/mapped</syntax>
            </parameter>
            <parameter>
              <name>MaxMRUSize</name>
              <type>unsignedInt[1280:1500]</type>
              <syntax>uint32</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>CurrentMRUSize</name>
              <type>unsignedInt[1:1540]</type>
              <syntax>uint32</syntax>
              <notify>off</notify>
            </parameter>
            <parameter>
              <name>ConnectionTrigger</name>
              <type>string: OnDemand(1),AlwaysOn(2),Manual(3)</type>
              <syntax>uint32/mapped</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>X_RDK_LinkType</name>
              <type>string: PPPoA(1),PPPoE(2)</type>
              <syntax>uint32/mapped</syntax>
              <writable>true</writable>
            </parameter>
            <parameter>
              <name>LCPEcho</name>
              <type>unsignedInt</type>
              <syntax>uint32</syntax>
            </parameter>
            <parameter>
              <name>LCPEchoRetry</name>
              <type>unsignedInt</type>
              <syntax>uint32</syntax>
            </parameter>
            </parameters>
            <objects>
              <object>
                <name>PPPoE</name>
                <objectType>object</objectType>
                <functions>
                  <func_GetParamBoolValue>PPPoE_GetParamBoolValue</func_GetParamBoolValue>
                  <func_GetParamIntValue>PPPoE_GetParamIntValue</func_GetParamIntValue>
                  <func_GetParamUlongValue>PPPoE_GetParamUlongValue</func_GetParamUlongValue>
                  <func_GetParamStringValue>PPPoE_GetParamStringValue</func_GetParamStringValue>
                  <func_SetParamBoolValue>PPPoE_SetParamBoolValue</func_SetParamBoolValue>
                  <func_SetParamIntValue>PPPoE_SetParamIntValue</func_SetParamIntValue>
                  <func_SetParamUlongValue>PPPoE_SetParamUlongValue</func_SetParamUlongValue>
                  <func_SetParamStringValue>PPPoE_SetParamStringValue</func_SetParamStringValue>
                  <func_Validate>PPPoE_Validate</func_Validate>
                  <func_Commit>PPPoE_Commit</func_Commit>
                  <func_Rollback>PPPoE_Rollback</func_Rollback>
                </functions>
                <parameters>
              <parameter>
                <name>SessionID</name>
                <type>unsignedInt[1:]</type>
                <syntax>uint32</syntax>
              </parameter>
              <parameter>
                <name>ACName</name>
                <type>string(256)</type>
                <syntax>string</syntax>
                <writable>true</writable>
              </parameter>
              <parameter>
                <name>ServiceName</name>
                <type>string(256)</type>
                <syntax>string</syntax>
                <writable>true</writable>
              </parameter>
                </parameters>
              </object>
              <object>
                <name>IPCP</name>
                <objectType>object</objectType>
                <functions>
                  <func_GetParamBoolValue>IPCP_GetParamBoolValue</func_GetParamBoolValue>
                  <func_GetParamIntValue>IPCP_GetParamIntValue</func_GetParamIntValue>
                  <func_GetParamUlongValue>IPCP_GetParamUlongValue</func_GetParamUlongValue>
                  <func_GetParamStringValue>IPCP_GetParamStringValue</func_GetParamStringValue>
                  <func_SetParamBoolValue>IPCP_SetParamBoolValue</func_SetParamBoolValue>
                  <func_SetParamIntValue>IPCP_SetParamIntValue</func_SetParamIntValue>
                  <func_SetParamUlongValue>IPCP_SetParamUlongValue</func_SetParamUlongValue>
                  <func_SetParamStringValue>IPCP_SetParamStringValue</func_SetParamStringValue>
                  <func_Validate>IPCP_Validate</func_Validate>
                  <func_Commit>IPCP_Commit</func_Commit>
                  <func_Rollback>IPCP_Rollback</func_Rollback>
                </functions>
                <parameters>
              <parameter>
                <name>LocalIPAddress</name>
                <type>string</type>
                <syntax>string</syntax>
              </parameter>
              <parameter>
                <name>RemoteIPAddress</name>
                <type>string</type>
                <syntax>string</syntax>
              </parameter>
              <parameter>
                <name>DNSServers</name>
                <type>string</type>
                <syntax>string</syntax>
              </parameter>
              <parameter>
                <name>PassthroughEnable</name>
                <type>boolean</type>
                <syntax>bool</syntax>
                <writable>true</writable>
              </parameter>
              <parameter>
                <name>PassthroughDHCPPool</name>
                <type>string(256)</type>
                <syntax>string</syntax>
                <writable>true</writable>
              </parameter>
                </parameters>
              </object>
              <object>
                <name>IPv6CP</name>
                <objectType>object</objectType>
                <functions>
                  <func_GetParamStringValue>IPv6CP_GetParamStringValue</func_GetParamStringValue>
                </functions>
                <parameters>
              <parameter>
                <name>LocalInterfaceIdentifier</name>
                <type>string(45)</type>
                <syntax>string</syntax>
              </parameter>
              <parameter>
                <name>RemoteInterfaceIdentifier</name>
                <type>string(45)</type>
                <syntax>string</syntax>
              </parameter>
                </parameters>
              </object>
              <object>
                <name>Stats</name>
                <objectType>object</objectType>
                <functions>
                  <func_GetParamUlongValue>Stats_GetParamUlongValue</func_GetParamUlongValue>
                </functions>
                <parameters>
              <parameter>
                <name>BytesSent</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>BytesReceived</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>PacketsSent</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>PacketsReceived</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>ErrorsSent</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>ErrorsReceived</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>UnicastPacketsSent</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>UnicastPacketsReceived</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>DiscardPacketsSent</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>DiscardPacketsReceived</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>MulticastPacketsSent</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>MulticastPacketsReceived</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>BroadcastPacketsSent</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>BroadcastPacketsReceived</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
              <parameter>
                <name>UnknownProtoPacketsReceived</name>
                <type>unsignedInt</type>
                <syntax>uint32</syntax>
                <notify>off</notify>
              </parameter>
                </parameters>
              </object>
            </objects>
          </object>
        </objects>
      </object>
    </objects>
</dataModelInfo>
